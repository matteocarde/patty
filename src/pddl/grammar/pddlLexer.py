# Generated from pddl.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,46,414,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,
        1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,
        1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,
        1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
        1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,
        1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
        1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,
        1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
        1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,
        1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,40,1,40,
        1,41,1,41,1,41,1,42,1,42,5,42,372,8,42,10,42,12,42,375,9,42,1,43,
        1,43,1,44,1,44,3,44,381,8,44,1,45,1,45,1,45,1,46,1,46,1,47,3,47,
        389,8,47,1,47,4,47,392,8,47,11,47,12,47,393,1,47,1,47,4,47,398,8,
        47,11,47,12,47,399,3,47,402,8,47,1,47,1,47,3,47,406,8,47,1,48,4,
        48,409,8,48,11,48,12,48,410,1,48,1,48,0,0,49,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
        17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
        28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
        39,79,40,81,41,83,42,85,43,87,0,89,0,91,44,93,0,95,45,97,46,1,0,
        3,2,0,65,90,97,122,3,0,45,45,48,57,95,95,3,0,9,10,13,13,32,32,418,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,91,1,0,0,0,0,95,1,0,0,0,0,97,
        1,0,0,0,1,99,1,0,0,0,3,106,1,0,0,0,5,113,1,0,0,0,7,115,1,0,0,0,9,
        129,1,0,0,0,11,131,1,0,0,0,13,138,1,0,0,0,15,142,1,0,0,0,17,154,
        1,0,0,0,19,165,1,0,0,0,21,172,1,0,0,0,23,181,1,0,0,0,25,190,1,0,
        0,0,27,192,1,0,0,0,29,194,1,0,0,0,31,196,1,0,0,0,33,198,1,0,0,0,
        35,201,1,0,0,0,37,204,1,0,0,0,39,206,1,0,0,0,41,208,1,0,0,0,43,211,
        1,0,0,0,45,215,1,0,0,0,47,218,1,0,0,0,49,230,1,0,0,0,51,244,1,0,
        0,0,53,255,1,0,0,0,55,263,1,0,0,0,57,271,1,0,0,0,59,278,1,0,0,0,
        61,287,1,0,0,0,63,299,1,0,0,0,65,307,1,0,0,0,67,315,1,0,0,0,69,324,
        1,0,0,0,71,330,1,0,0,0,73,336,1,0,0,0,75,344,1,0,0,0,77,353,1,0,
        0,0,79,362,1,0,0,0,81,364,1,0,0,0,83,366,1,0,0,0,85,369,1,0,0,0,
        87,376,1,0,0,0,89,380,1,0,0,0,91,382,1,0,0,0,93,385,1,0,0,0,95,405,
        1,0,0,0,97,408,1,0,0,0,99,100,5,100,0,0,100,101,5,101,0,0,101,102,
        5,102,0,0,102,103,5,105,0,0,103,104,5,110,0,0,104,105,5,101,0,0,
        105,2,1,0,0,0,106,107,5,100,0,0,107,108,5,111,0,0,108,109,5,109,
        0,0,109,110,5,97,0,0,110,111,5,105,0,0,111,112,5,110,0,0,112,4,1,
        0,0,0,113,114,5,58,0,0,114,6,1,0,0,0,115,116,5,58,0,0,116,117,5,
        114,0,0,117,118,5,101,0,0,118,119,5,113,0,0,119,120,5,117,0,0,120,
        121,5,105,0,0,121,122,5,114,0,0,122,123,5,101,0,0,123,124,5,109,
        0,0,124,125,5,101,0,0,125,126,5,110,0,0,126,127,5,116,0,0,127,128,
        5,115,0,0,128,8,1,0,0,0,129,130,5,45,0,0,130,10,1,0,0,0,131,132,
        5,58,0,0,132,133,5,116,0,0,133,134,5,121,0,0,134,135,5,112,0,0,135,
        136,5,101,0,0,136,137,5,115,0,0,137,12,1,0,0,0,138,139,5,110,0,0,
        139,140,5,111,0,0,140,141,5,116,0,0,141,14,1,0,0,0,142,143,5,58,
        0,0,143,144,5,112,0,0,144,145,5,114,0,0,145,146,5,101,0,0,146,147,
        5,100,0,0,147,148,5,105,0,0,148,149,5,99,0,0,149,150,5,97,0,0,150,
        151,5,116,0,0,151,152,5,101,0,0,152,153,5,115,0,0,153,16,1,0,0,0,
        154,155,5,58,0,0,155,156,5,102,0,0,156,157,5,117,0,0,157,158,5,110,
        0,0,158,159,5,99,0,0,159,160,5,116,0,0,160,161,5,105,0,0,161,162,
        5,111,0,0,162,163,5,110,0,0,163,164,5,115,0,0,164,18,1,0,0,0,165,
        166,5,97,0,0,166,167,5,115,0,0,167,168,5,115,0,0,168,169,5,105,0,
        0,169,170,5,103,0,0,170,171,5,110,0,0,171,20,1,0,0,0,172,173,5,105,
        0,0,173,174,5,110,0,0,174,175,5,99,0,0,175,176,5,114,0,0,176,177,
        5,101,0,0,177,178,5,97,0,0,178,179,5,115,0,0,179,180,5,101,0,0,180,
        22,1,0,0,0,181,182,5,100,0,0,182,183,5,101,0,0,183,184,5,99,0,0,
        184,185,5,114,0,0,185,186,5,101,0,0,186,187,5,97,0,0,187,188,5,115,
        0,0,188,189,5,101,0,0,189,24,1,0,0,0,190,191,5,43,0,0,191,26,1,0,
        0,0,192,193,5,42,0,0,193,28,1,0,0,0,194,195,5,47,0,0,195,30,1,0,
        0,0,196,197,5,62,0,0,197,32,1,0,0,0,198,199,5,62,0,0,199,200,5,61,
        0,0,200,34,1,0,0,0,201,202,5,60,0,0,202,203,5,61,0,0,203,36,1,0,
        0,0,204,205,5,60,0,0,205,38,1,0,0,0,206,207,5,61,0,0,207,40,1,0,
        0,0,208,209,5,35,0,0,209,210,5,116,0,0,210,42,1,0,0,0,211,212,5,
        97,0,0,212,213,5,110,0,0,213,214,5,100,0,0,214,44,1,0,0,0,215,216,
        5,111,0,0,216,217,5,114,0,0,217,46,1,0,0,0,218,219,5,58,0,0,219,
        220,5,112,0,0,220,221,5,97,0,0,221,222,5,114,0,0,222,223,5,97,0,
        0,223,224,5,109,0,0,224,225,5,101,0,0,225,226,5,116,0,0,226,227,
        5,101,0,0,227,228,5,114,0,0,228,229,5,115,0,0,229,48,1,0,0,0,230,
        231,5,58,0,0,231,232,5,112,0,0,232,233,5,114,0,0,233,234,5,101,0,
        0,234,235,5,99,0,0,235,236,5,111,0,0,236,237,5,110,0,0,237,238,5,
        100,0,0,238,239,5,105,0,0,239,240,5,116,0,0,240,241,5,105,0,0,241,
        242,5,111,0,0,242,243,5,110,0,0,243,50,1,0,0,0,244,245,5,58,0,0,
        245,246,5,99,0,0,246,247,5,111,0,0,247,248,5,110,0,0,248,249,5,100,
        0,0,249,250,5,105,0,0,250,251,5,116,0,0,251,252,5,105,0,0,252,253,
        5,111,0,0,253,254,5,110,0,0,254,52,1,0,0,0,255,256,5,58,0,0,256,
        257,5,101,0,0,257,258,5,102,0,0,258,259,5,102,0,0,259,260,5,101,
        0,0,260,261,5,99,0,0,261,262,5,116,0,0,262,54,1,0,0,0,263,264,5,
        58,0,0,264,265,5,97,0,0,265,266,5,99,0,0,266,267,5,116,0,0,267,268,
        5,105,0,0,268,269,5,111,0,0,269,270,5,110,0,0,270,56,1,0,0,0,271,
        272,5,58,0,0,272,273,5,101,0,0,273,274,5,118,0,0,274,275,5,101,0,
        0,275,276,5,110,0,0,276,277,5,116,0,0,277,58,1,0,0,0,278,279,5,58,
        0,0,279,280,5,112,0,0,280,281,5,114,0,0,281,282,5,111,0,0,282,283,
        5,99,0,0,283,284,5,101,0,0,284,285,5,115,0,0,285,286,5,115,0,0,286,
        60,1,0,0,0,287,288,5,58,0,0,288,289,5,99,0,0,289,290,5,111,0,0,290,
        291,5,110,0,0,291,292,5,115,0,0,292,293,5,116,0,0,293,294,5,114,
        0,0,294,295,5,97,0,0,295,296,5,105,0,0,296,297,5,110,0,0,297,298,
        5,116,0,0,298,62,1,0,0,0,299,300,5,112,0,0,300,301,5,114,0,0,301,
        302,5,111,0,0,302,303,5,98,0,0,303,304,5,108,0,0,304,305,5,101,0,
        0,305,306,5,109,0,0,306,64,1,0,0,0,307,308,5,58,0,0,308,309,5,100,
        0,0,309,310,5,111,0,0,310,311,5,109,0,0,311,312,5,97,0,0,312,313,
        5,105,0,0,313,314,5,110,0,0,314,66,1,0,0,0,315,316,5,58,0,0,316,
        317,5,111,0,0,317,318,5,98,0,0,318,319,5,106,0,0,319,320,5,101,0,
        0,320,321,5,99,0,0,321,322,5,116,0,0,322,323,5,115,0,0,323,68,1,
        0,0,0,324,325,5,58,0,0,325,326,5,105,0,0,326,327,5,110,0,0,327,328,
        5,105,0,0,328,329,5,116,0,0,329,70,1,0,0,0,330,331,5,58,0,0,331,
        332,5,103,0,0,332,333,5,111,0,0,333,334,5,97,0,0,334,335,5,108,0,
        0,335,72,1,0,0,0,336,337,5,58,0,0,337,338,5,109,0,0,338,339,5,101,
        0,0,339,340,5,116,0,0,340,341,5,114,0,0,341,342,5,105,0,0,342,343,
        5,99,0,0,343,74,1,0,0,0,344,345,5,109,0,0,345,346,5,97,0,0,346,347,
        5,120,0,0,347,348,5,105,0,0,348,349,5,109,0,0,349,350,5,105,0,0,
        350,351,5,122,0,0,351,352,5,101,0,0,352,76,1,0,0,0,353,354,5,109,
        0,0,354,355,5,105,0,0,355,356,5,110,0,0,356,357,5,105,0,0,357,358,
        5,109,0,0,358,359,5,105,0,0,359,360,5,122,0,0,360,361,5,101,0,0,
        361,78,1,0,0,0,362,363,5,40,0,0,363,80,1,0,0,0,364,365,5,41,0,0,
        365,82,1,0,0,0,366,367,5,63,0,0,367,368,3,85,42,0,368,84,1,0,0,0,
        369,373,3,87,43,0,370,372,3,89,44,0,371,370,1,0,0,0,372,375,1,0,
        0,0,373,371,1,0,0,0,373,374,1,0,0,0,374,86,1,0,0,0,375,373,1,0,0,
        0,376,377,7,0,0,0,377,88,1,0,0,0,378,381,3,87,43,0,379,381,7,1,0,
        0,380,378,1,0,0,0,380,379,1,0,0,0,381,90,1,0,0,0,382,383,5,63,0,
        0,383,384,3,85,42,0,384,92,1,0,0,0,385,386,2,48,57,0,386,94,1,0,
        0,0,387,389,5,45,0,0,388,387,1,0,0,0,388,389,1,0,0,0,389,391,1,0,
        0,0,390,392,3,93,46,0,391,390,1,0,0,0,392,393,1,0,0,0,393,391,1,
        0,0,0,393,394,1,0,0,0,394,401,1,0,0,0,395,397,5,46,0,0,396,398,3,
        93,46,0,397,396,1,0,0,0,398,399,1,0,0,0,399,397,1,0,0,0,399,400,
        1,0,0,0,400,402,1,0,0,0,401,395,1,0,0,0,401,402,1,0,0,0,402,406,
        1,0,0,0,403,404,5,35,0,0,404,406,5,116,0,0,405,388,1,0,0,0,405,403,
        1,0,0,0,406,96,1,0,0,0,407,409,7,2,0,0,408,407,1,0,0,0,409,410,1,
        0,0,0,410,408,1,0,0,0,410,411,1,0,0,0,411,412,1,0,0,0,412,413,6,
        48,0,0,413,98,1,0,0,0,9,0,373,380,388,393,399,401,405,410,1,6,0,
        0
    ]

class pddlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    LP = 40
    RP = 41
    VAR = 42
    NAME = 43
    VARIABLE = 44
    NUMBER = 45
    WS = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'define'", "'domain'", "':'", "':requirements'", "'-'", "':types'", 
            "'not'", "':predicates'", "':functions'", "'assign'", "'increase'", 
            "'decrease'", "'+'", "'*'", "'/'", "'>'", "'>='", "'<='", "'<'", 
            "'='", "'#t'", "'and'", "'or'", "':parameters'", "':precondition'", 
            "':condition'", "':effect'", "':action'", "':event'", "':process'", 
            "':constraint'", "'problem'", "':domain'", "':objects'", "':init'", 
            "':goal'", "':metric'", "'maximize'", "'minimize'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "LP", "RP", "VAR", "NAME", "VARIABLE", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "LP", "RP", "VAR", "NAME", "LETTER", "ANY_CHAR", 
                  "VARIABLE", "DIGIT", "NUMBER", "WS" ]

    grammarFileName = "pddl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


